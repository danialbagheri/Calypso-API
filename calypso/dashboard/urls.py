from django.urls import path, include
from dashboard import views

app_name = "dashboard"

urlpatterns = [
    path('', views.dashboard, name="home"),
    path('products/', views.products, name="products"),
    path('products/images/', views.ImageList.as_view(), name="images"),
    path('products/images/<int:pk>/', views.ImageEditView.as_view(),
         name="image-edit"),
    path('products/images/add/', views.ImageCreate.as_view(),
         name="image-create"),
    path('products/<slug:slug>/',
         views.ProductEdit.as_view(), name="product-edit"),
    path('images/upload/', views.ImageUploadView.as_view(), name="image-upload"),
    path('tags/', views.product_tags, name="tags"),
    path('tags/<int:pk>/', views.ProductTagUpdate.as_view(), name="tag-edit"),
    path('tags/<int:pk>/delete/', views.ProductTagDelete.as_view(), name="tag-delete"),
    path('product/collection/', views.CollectionsList.as_view(), name="collections"),
    path('blogs/', views.BlogList.as_view(), name="blogs"),
    path('blogs/<int:pk>/', views.BlogEditView.as_view(),
         name="blog-edit"),
    path('blogs/create/', views.BlogCreate.as_view(),
         name="blog-create"),
    path('reviews/', views.ReviewList.as_view(), name="reviews"),
    path('reviews/<int:pk>/', views.ReviewEditView.as_view(),
         name="review-edit"),
    path('faqs/', views.FaqList.as_view(), name="faqs"),
    path('faqs/<int:pk>/', views.FaqEditView.as_view(),
         name="faq-edit"),
    path('pages/', views.PageList.as_view(), name="pages"),
    path('pages/<int:pk>/', views.PageEditView.as_view(),
         name="page-edit"),
    path('pages/create/', views.PageCreate.as_view(),
         name="page-create"),
    path('faqs/create/', views.FaqCreate.as_view(),
         name="faq-create"),
    path('collection/add/', views.CollectionCreate.as_view(),
         name="collection-add"),
    path('collection/<int:pk>/', views.CollectionEditView.as_view(),
         name="collection-edit"),
    path('collection/<int:pk>/delete/', views.CollectionDelete.as_view(),
         name="collection-delete"),
    path('api-endpoint/', views.ApiEndpointView.as_view(),
         name="api-endpoint"),
    path('product/shopify-sync/', views.ShopifySyncView.as_view(),
         name="shopify-sync"),
    path('product/shopify-sync/api/', views.synchronise_with_shopify,
         name="shopify-sync-rest"),
    path('configs/', views.ConfigurationList.as_view(),
         name="configs"),
    path('configs/edit/<int:pk>/', views.ConfigEditView.as_view(),
         name="config-edit"),
]
